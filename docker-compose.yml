x-app: &default-app
  build:
    context: "."
    target: "app"
    network: host
    args:
      - "DEBUG=${DEBUG:-false}"
  depends_on:
    - "redis"
  env_file:
    - ".env"
  restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
  stop_grace_period: "3s"
  tty: true
  volumes:
    - static:/home/app/spire-api/static

services:
  redis:
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_REDIS_CPUS:-0}"
          memory: "${DOCKER_REDIS_MEMORY:-0}"
    env_file:
      - ".env"
    image: "redis:7-bullseye"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "3s"
    volumes:
      - "redis:/data"

  web:
    <<: *default-app
    deploy:
      resources:
        limits:
          cpus: "${DOCKER_WEB_CPUS:-0}"
          memory: "${DOCKER_WEB_MEMORY:-0}"
    healthcheck:
      test: "${DOCKER_WEB_HEALTHCHECK_TEST:-curl localhost:8000/up}"
      interval: "60s"
      timeout: "3s"
      start_period: "5s"
      retries: 3
    ports:
      - "${DOCKER_WEB_PORT_FORWARD:-127.0.0.1:8000}:8000"

  nginx:
    build:
      context: "nginx/"
      dockerfile: "Dockerfile"
    volumes:
      - certbot/conf:/etc/letsencrypt
      - certbot/www:/var/www/certbot
      - static:/home/app/

  certbot:
    image: certbot/certbot
    volumes:
      - certbot/conf:/etc/letsencrypt
      - certbot/www:/var/www/certbot
    command: certonly --non-interactive --webroot -w /var/www/certbot --force-renewal --email daniel@melanson.dev -d melanson.dev --agree-tos

#   worker:
#     <<: *default-app
#     command: celery -A config worker -l "${CELERY_LOG_LEVEL:-info}"
#     entrypoint: []
#     deploy:
#       resources:
#         limits:
#           cpus: "${DOCKER_WORKER_CPUS:-0}"
#           memory: "${DOCKER_WORKER_MEMORY:-0}"


volumes:
  redis: 
  static:
  certbot: {}
