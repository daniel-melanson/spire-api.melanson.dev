# Generated by Django 4.0.5 on 2022-06-15 22:36

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.CharField(max_length=32, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='must be a course ID (match course ID RegExp)', regex='^(?P<subject_id>[A-Z\\-]{2,9}[A-Z]) (?P<course_number>[\\x00-\\x7F]{1,9}[A-Za-z0-9])$')])),
                ('number', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(message='must be a course ID number (match course title number RegExp)', regex='^(?P<course_number>[\\x00-\\x7F]{1,9}[A-Za-z0-9])$')])),
                ('title', models.CharField(max_length=256, validators=[django.core.validators.RegexValidator(message='must be a course title (match course title RegExp)', regex='^(?P<course_title>[\\x00-\\x7F]{3,256})$')])),
                ('description', models.CharField(max_length=4096, null=True)),
                ('details', models.JSONField(default=dict)),
                ('enrollment_information', models.JSONField(null=True)),
                ('_updated_at', models.DateTimeField()),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='SectionCoverage',
            fields=[
                ('term', models.CharField(max_length=32, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='must be a term (match the term RegExp)', regex='^(Spring|Summer|Winter|Fall) (20\\d{2})$')])),
                ('completed', models.BooleanField(default=False)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(null=True)),
            ],
            options={
                'ordering': ['term'],
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('email', models.EmailField(max_length=254, null=True)),
            ],
            options={
                'ordering': ['email'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('title', models.CharField(max_length=64, unique=True, validators=[django.core.validators.RegexValidator(message='must be a title (match subject title RegExp)', regex='^(?P<subject_title>[\\x00-\\x7F]{3,99})$')])),
                ('id', models.CharField(max_length=8, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator(message='must be a  title (match subject id RegExp)', regex='^(?P<subject_id>[A-Z\\-]{2,9}[A-Z])$')])),
                ('courses', models.ManyToManyField(related_name='+', to='spire.course')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='must be a section id (match the id RegExp', regex='^(?P<section_id>[\\x00-\\x7F]{3,10})$')])),
                ('term', models.CharField(max_length=16, validators=[django.core.validators.RegexValidator(message='must be a term (match the term RegExp)', regex='^(Spring|Summer|Winter|Fall) (20\\d{2})$')])),
                ('details', models.JSONField()),
                ('restrictions', models.JSONField(null=True)),
                ('availability', models.JSONField()),
                ('description', models.CharField(max_length=1024, null=True)),
                ('overview', models.CharField(max_length=1024, null=True)),
                ('meeting_info', models.JSONField()),
                ('_updated_at', models.DateTimeField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spire.course')),
                ('instructors', models.ManyToManyField(to='spire.staff')),
            ],
            options={
                'ordering': ['term', 'course', 'id'],
            },
        ),
        migrations.AddField(
            model_name='course',
            name='sections',
            field=models.ManyToManyField(related_name='+', to='spire.section'),
        ),
        migrations.AddField(
            model_name='course',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='spire.subject'),
        ),
        migrations.AlterUniqueTogether(
            name='course',
            unique_together={('subject', 'number')},
        ),
    ]
